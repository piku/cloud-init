#cloud-config

package_upgrade: true
packages:
  - ntp
  - tmux
  - htop
  - vim
  - fail2ban
  - curl
  - wget
  - sudo
  # This includes some dev packages for common deployments
  - build-essential
  - libjpeg-dev
  - libxml2-dev
  - libxslt1-dev
  - libyaml-cpp-dev
  - zlib1g-dev
  # Piku stack, plus helpers
  - git
  - certbot
  - incron
  - nginx
  - python3-certbot-nginx
  - python3-dev
  - python3-pip
  - python3-click
  - python3-virtualenv
  - uwsgi
  - uwsgi-plugin-python3
  - uwsgi-plugin-asyncio-python3
  - uwsgi-plugin-gevent-python3
  - uwsgi-plugin-greenlet-python3
  - uwsgi-plugin-tornado-python3
  - uwsgi-plugin-jwsgi-openjdk-11
  - uwsgi-plugin-php
  - uwsgi-plugin-lua5.1
  - uwsgi-plugin-lua5.2
  - uwsgi-plugin-luajit
  
write_files:
  - path: /etc/nginx/sites-available/default
    content: |
      server {
          listen 80 default_server;
          listen [::]:80 default_server;
          root /var/www/html;
          index index.html index.htm;
          server_name _;
          location / {
              try_files $uri $uri/ =404;
          }
      }
      include /home/piku/.piku/nginx/*.conf;

  - path: /etc/incron.d/paas
    content: |
      /home/piku/.piku/nginx IN_MODIFY,IN_NO_LOOP /bin/systemctl reload nginx
  
  # If you change the SSH port, don't forget to edit this accordingly
  #- path: /etc/fail2ban/jail.d/defaults-debian.conf
  #  content: |
  #    [sshd]
  #    enabled = true
  #    port = 22

  # Have the Azure agent set up a swapfile for us
  - path: /etc/waagent.conf
    content: |
        ResourceDisk.Format=y
        ResourceDisk.EnableSwap=y
        ResourceDisk.SwapSizeMB=2048

runcmd:
  # Adjust to taste
  - timedatectl set-timezone Europe/Lisbon
  # Since Azure will provision the admin user first, we can get its public key like this:
  - cat /home/*/.ssh/authorized_keys | head -1 > /tmp/id_rsa.pub
  # Now we can add the Piku user and do the remaining setsudo sysctl -w fs.inotify.max_user_watches=12288up
  - adduser --disabled-password --gecos 'PaaS access' --ingroup www-data piku
  - su - piku -c "wget https://raw.githubusercontent.com/piku/piku/master/piku.py && python3 ~/piku.py setup"
  - ln /home/piku/.piku/uwsgi/uwsgi.ini /etc/uwsgi/apps-enabled/piku.ini
  - su - piku -c "python3 ~/piku.py setup:ssh /tmp/id_rsa.pub"
  # Remove snaps (primarily useful in smaller VMs)
  - sudo apt purge snapd -y
  # Install nodesource LTS version
  - curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
  - sudo apt-get install -y nodejs
  # Basic hygiene in case there are any outstanding dependency changes
  - sudo apt update -y
  - sudo apt dist-upgrade -y
  - sudo apt autoremove -y
  # Ensure we have inotify working
  - sudo sysctl -w fs.inotify.max_user_watches=524288
  # This will clean out /tmp as well
  - reboot
